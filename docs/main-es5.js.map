{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/cars/car-add/car-add.component.ts","webpack:///src/app/cars/car-add/car-add.component.html","webpack:///src/app/cars/car-free/car-free.component.ts","webpack:///src/app/cars/car-free/car-free.component.html","webpack:///src/app/cars/car/car.component.ts","webpack:///src/app/cars/car/car.component.html","webpack:///src/app/cars/cars.component.ts","webpack:///src/app/cars/cars.component.html","webpack:///src/app/cars/cars.module.ts","webpack:///src/app/error-page/error-page.component.ts","webpack:///src/app/error-page/error-page.component.html","webpack:///src/app/my.validators.ts","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/pipes/convert-time.pipe.ts","webpack:///src/app/pipes/decode-logo.pipe.ts","webpack:///src/app/pipes/filter-cars.pipe.ts","webpack:///src/app/pipes/filter-users.pipe.ts","webpack:///src/app/services/auth.guard.ts","webpack:///src/app/services/car.service.ts","webpack:///src/app/services/login.guard.ts","webpack:///src/app/services/shift.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/top-block/top-block.component.ts","webpack:///src/app/top-block/top-block.component.html","webpack:///src/app/users/user-add/user-add.component.ts","webpack:///src/app/users/user-add/user-add.component.html","webpack:///src/app/users/user-free/user-free.component.ts","webpack:///src/app/users/user-free/user-free.component.html","webpack:///src/app/users/user/user.component.ts","webpack:///src/app/users/user/user.component.html","webpack:///src/app/users/users.component.ts","webpack:///src/app/users/users.component.html","webpack:///src/app/users/users.module.ts","webpack:///src/env.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","loadChildren","m","CarsModule","UsersModule","redirectTo","pathMatch","AppRoutingModule","forRoot","preloadingStrategy","imports","AppComponent","userService","token","localStorage","getItem","info","isAuth","selector","templateUrl","styleUrls","AppModule","register","enabled","production","declarations","providers","bootstrap","AuthComponent","router","form","login","minLength","required","number","password","userAutorise","value","subscribe","user","loading","setItem","navigate","error","message","submit","CarAddComponent","carService","numberAuto","model","VIN","STS","OSAGO","dateOSAGO","tel","IMEI","addCar","car","addCarState","reset","CarFreeComponent","CarComponent","route","edit","deleteMode","params","sub","getByNumber","unsubscribe","String","slice","data","Date","updateCar","console","log","updating","deleteCar","res","deleting","save","closeEdit","CarsComponent","getCars","cars","text","searchNumber","updateSearch","forChild","canActivateChild","children","ErrorPageComponent","MyValidators","control","isNaN","Number","NaN","reg","test","toUpperCase","NavbarComponent","removeItem","logout","ConvertTimePipe","h","Math","round","name","DecodeLogoPipe","trim","FilterCarsPipe","filter","toLowerCase","includes","FilterUsersPipe","AuthGuard","state","providedIn","CarService","http","get","observable","setInterval","next","find","post","push","put","LoginGuard","ShiftService","shifts","headers","userid","UserService","users","loginInfo","userInfo","_id","SharedModule","TopBlockComponent","onChange","searchInput","nativeElement","focus","emit","searchText","focusSearch","changeText","UserAddComponent","userRegister","addUserToState","UserFreeComponent","UserComponent","shiftService","editPassword","carListIdx","namesEditInput","password1","password2","invalidPassword","invalidLogin","getById","getShifts","key","sumTime","map","idx","updateUser","nameInput","closeInput","validPasswords","deleteUser","deleteUserFromState","background","border","right","left","cursor","color","animations","UsersComponent","getUsers","searchName","URL_SERVER","URLS_LOGO","R","W","K","environment","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { ErrorPageComponent } from './error-page/error-page.component';\r\nimport { LoginGuard } from './services/login.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: AuthComponent, canActivate: [LoginGuard] },\r\n  {path: 'cars', loadChildren: () => import('./cars/cars.module').then((m) => m.CarsModule)},\r\n  {\r\n    path: 'users',\r\n    loadChildren: () =>\r\n      import('./users/users.module').then((m) => m.UsersModule),\r\n  },\r\n  { path: '', redirectTo: '/cars', pathMatch: 'full' },\r\n  { path: '**', component: ErrorPageComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules }),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { User, UserService } from './services/user.service';\r\nimport * as jwt_decode from 'jwt-decode';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  token: string;\r\n\r\n  constructor(public userService: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.token = localStorage.getItem('TOKEN');\r\n    if (this.token) {\r\n      const info: User = jwt_decode(this.token);\r\n      this.userService.isAuth = true;\r\n    }\r\n  }\r\n}\r\n","<app-navbar *ngIf=\"userService.isAuth\"></app-navbar>\n<div class=\"general\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ErrorPageComponent } from './error-page/error-page.component';\nimport { SharedModule } from './shared/shared.module';\nimport { UsersModule } from './users/users.module';\nimport { CarsModule } from './cars/cars.module';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    NavbarComponent,\n    ErrorPageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    CarsModule,\n    UsersModule,\n    SharedModule,\n    BrowserAnimationsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MyValidators } from '../my.validators';\nimport { UserService, User } from '../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthComponent implements OnInit {\n  form: FormGroup;\n  error: string;\n\n  constructor(private userService: UserService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      login: new FormControl('', [\n        Validators.minLength(10),\n        Validators.required,\n        MyValidators.number,\n      ]),\n      password: new FormControl('', [\n        Validators.minLength(6),\n        Validators.required,\n      ]),\n    });\n  }\n\n  submit() {\n    this.userService.userAutorise(this.form.value).subscribe(\n      (user) => {\n        this.userService.loading = false;\n        this.userService.isAuth = true;\n        localStorage.setItem('TOKEN', user.token);\n        this.router.navigate(['/cars']);\n      },\n      (error) => (this.error = error.error.message)\n    );\n  }\n}\n","<div class=\"auth-block\">\r\n  <form class=\"form-auth\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n    <h3>Логин</h3>\r\n    <input type=\"text\" placeholder=\"Логин\" formControlName=\"login\" />\r\n\r\n    <div\r\n      *ngIf=\"form.get('login').invalid && form.get('login').touched\"\r\n      class=\"validation\"\r\n    >\r\n      <small *ngIf=\"form.get('login').errors.required\">\r\n        Логин отсутсвует.\r\n      </small>\r\n      <small *ngIf=\"form.get('login').errors.NaN\">\r\n        Логин должен быть номером телефона.\r\n      </small>\r\n      <small\r\n        *ngIf=\"\r\n          form.get('login').errors.minlength && !form.get('login').errors.NaN\r\n        \"\r\n      >\r\n        Логин должен быть\r\n        {{ form.get(\"login\").errors.minlength[\"requiredLength\"] }} символов.\r\n      </small>\r\n    </div>\r\n\r\n    <h3>Пароль</h3>\r\n\r\n    <input type=\"password\" placeholder=\"Пароль\" formControlName=\"password\" />\r\n\r\n    <div\r\n      *ngIf=\"form.get('password').invalid && form.get('password').touched\"\r\n      class=\"validation\"\r\n    >\r\n      <small *ngIf=\"form.get('password').errors.required\">\r\n        Пароль отсутсвует.\r\n      </small>\r\n      <small *ngIf=\"form.get('password').errors.minlength\">\r\n        Пароль должен быть не менее\r\n        {{ form.get(\"password\").errors.minlength[\"requiredLength\"] }} символов.\r\n      </small>\r\n    </div>\r\n\r\n    <button class=\"btn\" [disabled]=\"form.invalid\">Войти</button>\r\n\r\n    <div class=\"validation\" *ngIf=\"error\">\r\n      <small>{{ error }}</small>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MyValidators } from '../../my.validators';\nimport { CarService } from '../../services/car.service';\n\n@Component({\n  selector: 'app-car-add',\n  templateUrl: './car-add.component.html',\n  styleUrls: ['./car-add.component.scss'],\n})\nexport class CarAddComponent implements OnInit {\n  form: FormGroup;\n  error: any;\n\n  constructor(private carService: CarService) {}\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      number: new FormControl('', [MyValidators.numberAuto]),\n      model: new FormControl('R'),\n      info: new FormGroup({\n        VIN: new FormControl(''),\n        STS: new FormControl(''),\n        OSAGO: new FormControl(''),\n        dateOSAGO: new FormControl(''),\n        code: new FormControl(''),\n        tel: new FormControl(''),\n        IMEI: new FormControl(''),\n      }),\n    });\n  }\n\n  submit() {\n    this.carService.addCar(this.form.value).subscribe(\n      (car) => {\n        this.carService.loading = false;\n        this.carService.addCarState(car);\n        this.form.reset();\n      },\n      (error) => {\n        this.error = error.error.message;\n      }\n    );\n  }\n}\n","<div>\n  <h3>Новый автомобиль</h3>\n  <form class=\"form-add-car\" [formGroup]=\"form\" (submit)=\"submit()\">\n    <div class=\"flex-column\">\n      <div class=\"input-line\">\n        <label>Гос. номер</label>\n        <input type=\"text\" placeholder=\"A000AA\" formControlName=\"number\" />\n      </div>\n      <span\n        *ngIf=\"form.get('number').invalid && form.get('number').touched\"\n        class=\"validation\"\n      >\n        <small *ngIf=\"form.get('number').errors.reg\"\n          >Некоректный номер автомобиля</small\n        >\n      </span>\n      <div class=\"input-line\">\n        <label>Марка автомобиля</label>\n        <select formControlName=\"model\">\n          <option value=\"R\">Renault</option>\n          <option value=\"W\">Volkswagen</option>\n          <option value=\"K\">KIA</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"flex-column\" formGroupName=\"info\">\n      <div class=\"input-line\">\n        <label>VIN-код</label>\n        <input type=\"text\" formControlName=\"VIN\" />\n      </div>\n      <div class=\"input-line\">\n        <label>Номер СТС</label>\n        <input type=\"text\" formControlName=\"STS\" />\n      </div>\n      <div class=\"input-line\">\n        <label>Номер ОСАГО</label>\n        <input type=\"text\" formControlName=\"OSAGO\" />\n      </div>\n      <div class=\"input-line\">\n        <label>Дата ОСАГО</label>\n        <input type=\"date\" formControlName=\"dateOSAGO\" />\n      </div>\n      <div class=\"input-line\">\n        <label>Код магнитолы</label>\n        <input type=\"text\" formControlName=\"code\" />\n      </div>\n      <div class=\"input-line\">\n        <label>Телефон</label>\n        <input type=\"text\" formControlName=\"tel\" />\n      </div>\n      <div class=\"input-line\">\n        <label>IMEI</label>\n        <input type=\"text\" formControlName=\"IMEI\" />\n      </div>\n    </div>\n    <div class=\"btn-block\">\n      <button class=\"btn\" type=\"submit\">Send</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-car-free',\n  templateUrl: './car-free.component.html',\n  styleUrls: ['./car-free.component.scss']\n})\nexport class CarFreeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"car-free\">\n  <h1>Выберите авто</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Car, CarService, Info } from '../../services/car.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-car',\n  templateUrl: './car.component.html',\n  styleUrls: ['./car.component.scss'],\n})\nexport class CarComponent implements OnInit {\n  car: Car;\n  sub: Subscription;\n  edit = false;\n  STS = '';\n  OSAGO = '';\n  dateOSAGO: Date | string = '';\n  deleteMode = false;\n\n  constructor(\n    private carService: CarService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.sub = this.carService.getByNumber(params.number).subscribe((car) => {\n        if (car) {\n          this.car = car;\n          this.sub.unsubscribe();\n          this.STS = this.car?.info?.STS;\n          this.OSAGO = this.car?.info?.OSAGO;\n          this.dateOSAGO = String(this.car?.info?.dateOSAGO).slice(0, 10);\n        }\n      });\n    });\n  }\n\n  // updateCar() {\n  //   this.carService\n  //     .updateCar()\n  //     .subscribe((car) => {});\n  // }\n  save() {\n    const data: Info = {\n      STS: this.STS,\n      OSAGO: this.OSAGO,\n      dateOSAGO: new Date(this.dateOSAGO),\n    };\n    this.carService.updateCar(this.car.number, data).subscribe(\n      (car) => {\n        this.car = car;\n      },\n      (error) => {\n        console.log(error.error.message);\n      },\n      () => {\n        this.carService.updating = false;\n      }\n    );\n  }\n\n  delete() {\n    this.carService.deleteCar(this.car.number).subscribe(\n      (res) => {\n        this.router.navigate(['/cars']);\n      },\n      (error) => {\n        console.log(error.error.message);\n      },\n      () => {\n        this.carService.deleting = false;\n        this.deleteMode = false;\n      }\n    );\n  }\n\n  closeEdit() {\n    this.STS = this.car?.info?.STS;\n    this.OSAGO = this.car?.info?.OSAGO;\n    this.dateOSAGO = this.car?.info?.dateOSAGO;\n    this.edit = false;\n  }\n}\n","<div class=\"car\">\n  <h2>{{ car ? car.number : \"\" }}</h2>\n  <div class=\"car-info\">\n    <div class=\"number\">\n      <label>Номер автомобиля:</label>\n      <label class=\"info\">{{ car?.number }}</label>\n    </div>\n    <div class=\"date\">\n      <label>Дата:</label>\n      <label class=\"info\">{{ car?.lastService | date: \"dd.MM.yyyy\" }}</label>\n    </div>\n    <div class=\"vin\">\n      <label>VIN:</label>\n      <label class=\"info\">{{ car?.info?.VIN }}</label>\n    </div>\n    <div class=\"sts\" [ngSwitch]=\"edit\">\n      <label>СТС:</label>\n      <label class=\"info\" *ngSwitchCase=\"false\">{{ car?.info?.STS }}</label>\n      <input [(ngModel)]=\"STS\" *ngSwitchCase=\"true\" />\n    </div>\n    <div class=\"osago\" [ngSwitch]=\"edit\">\n      <label>ОСАГО:</label>\n      <label class=\"info\" *ngSwitchCase=\"false\">{{ car?.info?.OSAGO }}</label>\n      <input [(ngModel)]=\"OSAGO\" *ngSwitchCase=\"true\" />\n    </div>\n    <div class=\"date-osago\" [ngSwitch]=\"edit\">\n      <label>Дата начала страховки:</label>\n      <label class=\"info\" *ngSwitchCase=\"false\">{{\n        car?.info?.dateOSAGO | date: \"dd.MM.yyyy\"\n      }}</label>\n      <input type=\"date\" [(ngModel)]=\"dateOSAGO\" *ngSwitchCase=\"true\" />\n    </div>\n    <div class=\"code\">\n      <label>Код магнитолы:</label>\n      <label class=\"info\">{{ car?.info?.code }}</label>\n    </div>\n    <div class=\"tel\">\n      <label>Телефон:</label>\n      <label class=\"info\">{{ car?.info?.tel }}</label>\n    </div>\n    <div class=\"imei\">\n      <label>IMEI:</label>\n      <label class=\"info\">{{ car?.info?.IMEI }}</label>\n    </div>\n    <div class=\"buttons\">\n      <button\n        type=\"submit\"\n        [class]=\"edit ? 'save' : 'edit'\"\n        (click)=\"edit ? save() : (edit = true)\"\n      >\n        {{ edit ? \"Сохранить\" : \"Изменить\" }}\n      </button>\n      <button\n        [class]=\"edit ? 'cancel' : 'delete'\"\n        (click)=\"edit ? closeEdit() : (deleteMode = true)\"\n      >\n        {{ edit ? \"Отменить\" : \"Удалить\" }}\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-delete\" *ngIf=\"deleteMode\">\n  <div>\n    <label>Вы уверены что хотите удалить автомобиль?</label>\n    <span>\n      <button class=\"delete\" (click)=\"delete()\">Удалить</button>\n      <button class=\"edit\" (click)=\"deleteMode = false\">Отменить</button>\n    </span>\n  </div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { CarService } from '../services/car.service';\n\n@Component({\n  selector: 'app-cars',\n  templateUrl: './cars.component.html',\n  styleUrls: ['./cars.component.scss'],\n})\nexport class CarsComponent implements OnInit {\n  error: string;\n  searchNumber: string;\n\n  constructor(public carService: CarService) {}\n\n  ngOnInit(): void {\n    console.log('загружаю данные');\n    this.carService.getCars().subscribe(\n      (cars) => {\n        this.carService.cars = cars;\n        console.log(this.carService.cars);\n      },\n      (error) => (this.error = error.error.message),\n      () => {\n        this.carService.loading = false;\n      }\n    );\n  }\n\n  updateSearch(text: string) {\n    this.searchNumber = text;\n  }\n}\n","<div class=\"gridPage\">\n  <div class=\"left\">\n    <app-top-block\n      (onChange)=\"updateSearch($event)\"\n      link=\"/cars\"\n    ></app-top-block>\n    <div class=\"scroll\">\n      <div class=\"sub-scroll\">\n        <div\n          *ngFor=\"let car of carService.cars | filterCars: searchNumber\"\n          class=\"line\"\n          [routerLink]=\"['/cars', car.number]\"\n          routerLinkActive=\"active-line\"\n        >\n          <img\n            [src]=\"car.model | decodeLogo\"\n            [alt]=\"car.model\"\n            width=\"40px\"\n            height=\"40px\"\n          />\n          <p>{{ car.number }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"right\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CarComponent } from './car/car.component';\nimport { CarsComponent } from './cars.component';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard } from '../services/auth.guard';\nimport { CarAddComponent } from './car-add/car-add.component';\nimport { CarFreeComponent } from './car-free/car-free.component';\n\n@NgModule({\n  declarations: [\n    CarComponent,\n    CarsComponent,\n    CarAddComponent,\n    CarFreeComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: CarsComponent,\n        canActivate: [AuthGuard],\n        canActivateChild: [AuthGuard],\n        children: [\n          {\n            path: 'add',\n            component: CarAddComponent,\n          },\n          {\n            path: ':number',\n            component: CarComponent,\n          },\n          { path: '', component: CarFreeComponent },\n        ],\n      },\n    ]),\n    ReactiveFormsModule,\n  ],\n})\nexport class CarsModule {}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error-page',\r\n  templateUrl: './error-page.component.html',\r\n  styleUrls: ['./error-page.component.scss']\r\n})\r\nexport class ErrorPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"error\">\r\n  <h2>Страница не найдена</h2>\r\n  <button class=\"btn\" [routerLink]=\"['/cars']\">На главную</button>\r\n</div>\r\n","import { FormControl } from '@angular/forms';\n\nexport class MyValidators {\n  static number(control: FormControl): { [key: string]: boolean } {\n    if (isNaN(Number(control.value))) {\n      return { NaN: true };\n    }\n    return null;\n  }\n  static numberAuto(control: FormControl): { [key: string]: boolean } {\n    const reg = /^[АВЕКМНОРСТУХABEKMHOPCTYX]\\d{3}(?<!000)[АВЕКМНОРСТУХABEKMHOPCTYX]{2}/;\n    console.log();\n    if (!reg.test(control.value.toUpperCase())) {\n      return { reg: true };\n    }\n    return null;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../services/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss'],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  constructor(private userService: UserService, private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  logout() {\r\n    this.userService.isAuth = false;\r\n    localStorage.removeItem('TOKEN');\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","<nav class=\"navbar\">\r\n  <div class=\"heading\">\r\n    <a [routerLink]=\"['/cars']\">\r\n      <h1>VoronaCar Admin</h1>\r\n    </a>\r\n  </div>\r\n  <div class=\"points\" [routerLink]=\"['/cars']\" routerLinkActive=\"active\">\r\n    <h3>Автомобили</h3>\r\n  </div>\r\n  <div class=\"points\" [routerLink]=\"['/users']\" routerLinkActive=\"active\">\r\n    <h3>Пользователи</h3>\r\n  </div>\r\n  <div class=\"logout\" (click)=\"logout()\"><h4>Выход</h4></div>\r\n</nav>\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'convertTime',\n})\nexport class ConvertTimePipe implements PipeTransform {\n  transform(value: number): string {\n    if (!value) {\n      return null;\n    }\n    let m = value % 60;\n    let h = (value - m) / 60;\n    return `${h}ч ${Math.round(m)}мин`;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Model } from '../services/car.service';\r\nimport { URLS_LOGO } from '../../env';\r\n\r\n@Pipe({\r\n  name: 'decodeLogo',\r\n})\r\nexport class DecodeLogoPipe implements PipeTransform {\r\n  transform(value: Model): string {\r\n    if (!value.trim()) {\r\n      return null;\r\n    }\r\n    return URLS_LOGO[value];\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Car } from '../services/car.service';\n\n@Pipe({\n  name: 'filterCars',\n})\nexport class FilterCarsPipe implements PipeTransform {\n  transform(value: Car[], text: string = ''): Car[] {\n    if (text.trim()) {\n      return value.filter((car) => {\n        return car.number.toLowerCase().includes(text.toLowerCase());\n      });\n    }\n    return value;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../services/user.service';\n\n@Pipe({\n  name: 'filterUsers',\n})\nexport class FilterUsersPipe implements PipeTransform {\n  transform(value: User[], text: string = ''): User[] {\n    console.log(text);\n    if (text.trim()) {\n      return value.filter((user) => {\n        return user.name.toLowerCase().includes(text.toLowerCase());\n      });\n    }\n    return value;\n  }\n}\n","import {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from './user.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private userService: UserService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.userService.isAuth) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n\r\n  canActivateChild(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.canActivate(route, state);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { URL_SERVER } from '../../env';\nimport { Observable } from 'rxjs';\nimport { User } from './user.service';\n\nexport interface Car {\n  id?: string;\n  number: string;\n  model?: Model;\n  lastService?: string;\n  problems?: string[];\n  isRepairing?: boolean;\n  comments?: string;\n  info?: Info;\n}\n\nexport interface Info {\n  VIN?: string;\n  STS?: string;\n  OSAGO?: string;\n  dateOSAGO?: Date | string;\n  code?: string;\n  tel?: string;\n  IMEI?: string;\n}\n\n// type Problem =\n\nexport type Model = 'R' | 'W' | 'K';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CarService {\n  loading = false;\n  updating = false;\n  deleting = false;\n\n  cars: Car[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  getCars(): Observable<Car[]> {\n    this.loading = true;\n    return this.http.get<Car[]>(`${URL_SERVER}/car/info`);\n  }\n\n  getByNumber(number: string): Observable<Car> {\n    return new Observable<Car>((observable) => {\n      setInterval(() => {\n        observable.next(this.cars.find((car) => car.number === number));\n      }, 100);\n    });\n  }\n\n  addCar(car: Car): Observable<Car> {\n    this.loading = true;\n    return this.http.post<Car>(`${URL_SERVER}/car/create`, car);\n  }\n\n  addCarState(car: Car) {\n    this.cars.push(car);\n  }\n\n  updateCar(number: string, info: Info): Observable<Car> {\n    this.updating = true;\n    return this.http.put<Car>(`${URL_SERVER}/car/update`, {\n      number,\n      info,\n    });\n  }\n\n  deleteCar(id: string): Observable<any> {\n    this.deleting = true;\n    return this.http.delete<any>(`${URL_SERVER}/car/${id}`);\n  }\n}\n","import {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from './user.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoginGuard implements CanActivate {\r\n  constructor(private userService: UserService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (!this.userService.isAuth) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/cars']);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { URL_SERVER } from '../../env';\n\nexport interface Shift {\n  userId: string;\n  shiftStart: Date;\n  shiftTime: number;\n  valueOil: number;\n  wash: number;\n  carsList: string[];\n  isFinished: boolean;\n}\n\n@Injectable()\nexport class ShiftService {\n  loading = false;\n  shifts: Shift[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  getShifts(id: string): Observable<Shift[]> {\n    this.loading = true;\n    return this.http.get<Shift[]>(`${URL_SERVER}/shift/list`, {\n      headers: new HttpHeaders({\n        userid: id,\n      }),\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { observable, Observable } from 'rxjs';\nimport { URL_SERVER } from '../../env';\n\nexport interface User {\n  _id?: string;\n  login?: string;\n  password?: string;\n  name?: string;\n}\n\nexport interface Token {\n  token: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  loading = false;\n  updating = false;\n  deleting = false;\n  isAuth = false;\n  users: User[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  userAutorise(loginInfo: User): Observable<Token> {\n    this.loading = true;\n    return this.http.post<Token>(`${URL_SERVER}/auth/login/admin`, loginInfo);\n  }\n\n  userRegister(userInfo: User): Observable<any> {\n    this.loading = true;\n    return this.http.post<any>(`${URL_SERVER}/auth/register`, userInfo);\n  }\n\n  addUserToState(userInfo: User): void {\n    this.users.push(userInfo);\n  }\n\n  getUsers(): Observable<User[]> {\n    this.loading = true;\n    const token = localStorage.getItem('TOKEN');\n    return this.http.get<User[]>(`${URL_SERVER}/user/list`, {\n      headers: new HttpHeaders({\n        token,\n      }),\n    });\n  }\n\n  getById(id: string): Observable<User> {\n    return new Observable<User>((observable) => {\n      setInterval(() => {\n        observable.next(this.users.find((user) => user._id === id));\n      }, 100);\n    });\n  }\n\n  updateUser(user: User): Observable<User> {\n    const token = localStorage.getItem('TOKEN');\n    return this.http.put<User>(`${URL_SERVER}/user/update`, {\n      token,\n      user,\n    });\n  }\n\n  deleteUser(id: string): Observable<any> {\n    return this.http.delete(`${URL_SERVER}/user/${id}`);\n  }\n\n  deleteUserFromState(id: string) {\n    this.users = this.users.filter((user) => user._id !== id);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DecodeLogoPipe } from '../pipes/decode-logo.pipe';\nimport { FilterCarsPipe } from '../pipes/filter-cars.pipe';\nimport { FilterUsersPipe } from '../pipes/filter-users.pipe';\nimport { TopBlockComponent } from '../top-block/top-block.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ConvertTimePipe } from '../pipes/convert-time.pipe';\n\n@NgModule({\n  imports: [FormsModule, RouterModule],\n  declarations: [\n    DecodeLogoPipe,\n    FilterCarsPipe,\n    FilterUsersPipe,\n    ConvertTimePipe,\n    TopBlockComponent,\n  ],\n  exports: [\n    DecodeLogoPipe,\n    FilterCarsPipe,\n    FilterUsersPipe,\n    ConvertTimePipe,\n    TopBlockComponent,\n  ],\n})\nexport class SharedModule {}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-top-block',\n  templateUrl: './top-block.component.html',\n  styleUrls: ['./top-block.component.scss'],\n})\nexport class TopBlockComponent implements OnInit {\n  @ViewChild('searchInput', { static: false }) searchInput: ElementRef;\n  @Input() link: string;\n  @Output() onChange: EventEmitter<string> = new EventEmitter<string>();\n\n  error: string;\n  searchText: string;\n\n  constructor() {}\n\n  ngOnInit() {}\n  focusSearch() {\n    this.searchInput.nativeElement.focus();\n  }\n\n  changeText() {\n    this.onChange.emit(this.searchText);\n  }\n}\n","<div class=\"top-block\">\n  <div class=\"search\" (click)=\"focusSearch()\">\n    <input\n      type=\"text\"\n      [(ngModel)]=\"searchText\"\n      (ngModelChange)=\"changeText()\"\n      autocomplete=\"false\"\n      #searchInput\n    />\n    <img\n      src=\"../../assets/images/search.png\"\n      alt=\"search\"\n      width=\"20px\"\n      height=\"20px\"\n    />\n  </div>\n  <div class=\"add-button line\" [routerLink]=\"[link, 'add']\">Добавить</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from '../../services/user.service';\nimport { MyValidators } from '../../my.validators';\n\n@Component({\n  selector: 'app-user-add',\n  templateUrl: './user-add.component.html',\n  styleUrls: ['./user-add.component.scss'],\n})\nexport class UserAddComponent implements OnInit {\n  form: FormGroup;\n  error: any;\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      name: new FormControl(''),\n      login: new FormControl('', [\n        Validators.minLength(11),\n        Validators.required,\n        MyValidators.number,\n      ]),\n      password: new FormControl('', [\n        Validators.minLength(6),\n        Validators.required,\n      ]),\n    });\n  }\n\n  submit() {\n    this.userService.userRegister(this.form.value).subscribe(\n      (user) => {\n        this.userService.addUserToState(user);\n        this.form.reset();\n      },\n      (error) => (this.error = error.error.message)\n    );\n  }\n}\n","<div class=\"user-add\">\n  <h1>Регистрация пользователя</h1>\n  <form [formGroup]=\"form\" (submit)=\"submit()\">\n    <label>Логин</label>\n    <input formControlName=\"login\" />\n    <div\n      *ngIf=\"form.get('login').invalid && form.get('login').touched\"\n      class=\"validation\"\n    >\n      <small *ngIf=\"form.get('login').errors.required\">\n        Логин отсутсвует.\n      </small>\n      <small *ngIf=\"form.get('login').errors.NaN\">\n        Логин должен быть номером телефона.\n      </small>\n      <small\n        *ngIf=\"\n          form.get('login').errors.minlength && !form.get('login').errors.NaN\n        \"\n      >\n        Логин должен быть\n        {{ form.get(\"login\").errors.minlength[\"requiredLength\"] }} символов.\n      </small>\n    </div>\n\n    <label>ФИО</label>\n    <input formControlName=\"name\" />\n\n    <label>Пароль</label>\n    <input type=\"text\" placeholder=\"Пароль\" formControlName=\"password\" />\n\n    <div\n      *ngIf=\"form.get('password').invalid && form.get('password').touched\"\n      class=\"validation\"\n    >\n      <small *ngIf=\"form.get('password').errors.required\">\n        Пароль отсутсвует.\n      </small>\n      <small *ngIf=\"form.get('password').errors.minlength\">\n        Пароль должен быть не менее\n        {{ form.get(\"password\").errors.minlength[\"requiredLength\"] }} символов.\n      </small>\n    </div>\n\n    <button class=\"btn\" [disabled]=\"form.invalid\">Зарегистрировать</button>\n\n    <div class=\"validation\" *ngIf=\"error\">\n      <small>{{ error }}</small>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-free',\n  templateUrl: './user-free.component.html',\n  styleUrls: ['./user-free.component.scss']\n})\nexport class UserFreeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"user-free\">\n  <h1>Выберите пользователя</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { User, UserService } from '../../services/user.service';\nimport { ShiftService } from '../../services/shift.service';\nimport { Subscription } from 'rxjs';\nimport {\n  animate,\n  group,\n  query,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\ntype NameInput = 'login' | 'name' | 'password';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss'],\n  providers: [ShiftService],\n  animations: [\n    trigger('input2', [\n      state(\n        'off',\n        style({\n          background: '#f5f5f5',\n          border: '1px solid #f5f5f5',\n          right: '112px',\n        })\n      ),\n      state('on', style({ right: '0' })),\n    ]),\n    trigger('input1', [\n      state(\n        'off',\n        style({\n          background: '#f5f5f5',\n          border: '1px solid #f5f5f5',\n          left: '112px',\n        })\n      ),\n      state('on', style({ left: '0' })),\n    ]),\n    trigger('label', [\n      state(\n        'off',\n        style({\n          background: 'blueviolet',\n          cursor: 'pointer',\n          color: '#fff',\n        })\n      ),\n      state('on', style({ background: '#fff', color: '#000' })),\n    ]),\n    trigger('passwordBlock', [\n      state('off', style({ background: '#f5f5f5' })),\n      state('on', style({ background: '#fff' })),\n      transition('off <=> on', [\n        group([\n          query(\n            'input',\n            animate(\n              500,\n              style({\n                left: 0,\n                right: 0,\n                border: '1px solid #ccc',\n                background: '#fff',\n              })\n            )\n          ),\n          query(\n            'label',\n            animate(\n              500,\n              style({\n                background: '#fff',\n                color: '#000',\n              })\n            )\n          ),\n          animate(500),\n        ]),\n      ]),\n    ]),\n  ],\n})\nexport class UserComponent implements OnInit {\n  editPassword = 'off';\n  user: User;\n  sub: Subscription;\n  carListIdx: number | null = null;\n  namesEditInput: string[] = [];\n  login = '';\n  name = '';\n  password1 = null;\n  password2 = null;\n  invalidPassword = false;\n  invalidLogin = false;\n\n  constructor(\n    private userService: UserService,\n    public shiftService: ShiftService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.sub = this.userService.getById(params.id).subscribe((user) => {\n        if (user) {\n          this.user = user;\n          this.login = user.login;\n          this.name = user.name;\n          this.sub.unsubscribe();\n        }\n      });\n      this.shiftService.getShifts(params.id).subscribe((shifts) => {\n        this.shiftService.shifts = shifts;\n        this.shiftService.loading = false;\n      });\n    });\n  }\n\n  sumData(key: string): number {\n    let sumTime = 0;\n    this.shiftService.shifts.map((e) => {\n      sumTime += e[key];\n    });\n    return sumTime;\n  }\n\n  changeVisibleCarList(idx: number) {\n    if (this.carListIdx == null) {\n      this.carListIdx = idx;\n    } else if (this.carListIdx !== null) {\n      if (this.carListIdx === idx) {\n        this.carListIdx = null;\n      } else {\n        this.carListIdx = idx;\n      }\n    }\n  }\n\n  validPasswords() {\n    if (\n      this.password1.trim() &&\n      this.password2.trim() &&\n      this.password1 !== this.password2\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  submit(data: User) {\n    this.userService.updating = true;\n    this.userService.updateUser(data).subscribe(\n      (user) => {\n        this.user = user;\n      },\n      (error) => {\n        console.log(error);\n      },\n      () => {\n        this.userService.updating = false;\n      }\n    );\n  }\n\n  openInput(nameInput: NameInput) {\n    this.namesEditInput.push(nameInput);\n  }\n\n  closeInput(nameInput: NameInput) {\n    this.namesEditInput = this.namesEditInput.filter(\n      (name) => name !== nameInput\n    );\n    switch (nameInput) {\n      case 'login':\n        this.login = this.user.login;\n        break;\n      case 'name':\n        this.name = this.user.name;\n        break;\n      case 'password':\n        this.password1 = this.password2 = null;\n        break;\n    }\n  }\n\n  saveInput(nameInput: NameInput) {\n    switch (nameInput) {\n      case 'login':\n        if (isNaN(Number(this.login))) {\n          this.invalidLogin = true;\n        } else {\n          this.invalidLogin = false;\n          this.submit({ _id: this.user._id, login: this.login });\n          this.closeInput(nameInput);\n        }\n        break;\n      case 'name':\n        this.submit({ _id: this.user._id, name: this.name });\n        this.closeInput(nameInput);\n        break;\n      case 'password':\n        if (nameInput !== 'password') {\n        } else if (this.validPasswords()) {\n          this.submit({ _id: this.user._id, password: this.password1 });\n          this.closeInput(nameInput);\n          this.editPassword = 'off';\n          this.invalidPassword = false;\n        } else {\n          this.invalidPassword = true;\n        }\n        break;\n    }\n  }\n\n  deleteUser() {\n    this.userService.deleting = true;\n    this.userService.deleteUser(this.user._id).subscribe(\n      () => {\n        this.userService.deleteUserFromState(this.user._id);\n        this.router.navigate(['/users']);\n      },\n      () => {\n        console.log('Ошибка удаления');\n      },\n      () => {\n        this.userService.deleting = false;\n      }\n    );\n  }\n}\n","<div class=\"user\" *ngIf=\"!shiftService.loading\">\n  <div class=\"user-name-header\">\n    <h1>{{ user?.name }}</h1>\n    <div class=\"user-delete\" (click)=\"deleteUser()\">\n      <h4>Удалить пользователя</h4>\n      <img src=\"/assets/images/trash.png\" />\n    </div>\n  </div>\n  <div>\n    <div class=\"line\" [ngSwitch]=\"namesEditInput.includes('login')\">\n      <label>Номер телефона: &nbsp;</label>\n      <h3 *ngSwitchCase=\"false\">{{ user?.login }}</h3>\n      <input\n        type=\"text\"\n        *ngSwitchCase=\"true\"\n        [(ngModel)]=\"login\"\n        autocomplete=\"false\"\n      />\n      <img\n        [src]=\"\n          namesEditInput.includes('login')\n            ? '/assets/images/save.png'\n            : '/assets/images/edit.png'\n        \"\n        (click)=\"\n          namesEditInput.includes('login')\n            ? saveInput('login')\n            : openInput('login')\n        \"\n      />\n      <img\n        src=\"/assets/images/close.png\"\n        (click)=\"closeInput('login')\"\n        *ngSwitchCase=\"true\"\n      />\n    </div>\n    <div class=\"line\" [ngSwitch]=\"namesEditInput.includes('name')\">\n      <label>ФИО: &nbsp;</label>\n      <h4 *ngSwitchCase=\"false\">{{ user?.name }}</h4>\n      <input\n        type=\"text\"\n        *ngSwitchCase=\"true\"\n        [(ngModel)]=\"name\"\n        autocomplete=\"false\"\n      />\n      <img\n        [src]=\"\n          namesEditInput.includes('name')\n            ? '/assets/images/save.png'\n            : '/assets/images/edit.png'\n        \"\n        (click)=\"\n          namesEditInput.includes('name')\n            ? saveInput('name')\n            : openInput('name')\n        \"\n      />\n      <img\n        src=\"/assets/images/close.png\"\n        (click)=\"closeInput('name')\"\n        *ngSwitchCase=\"true\"\n      />\n    </div>\n    <div\n      class=\"password\"\n      [@passwordBlock]=\"editPassword\"\n      [ngSwitch]=\"namesEditInput.includes('password')\"\n    >\n      <label\n        (click)=\"editPassword = 'on'; openInput('password')\"\n        [@label]=\"editPassword\"\n        >Изменить пароль:</label\n      >\n      <input\n        type=\"password\"\n        [@input1]=\"editPassword\"\n        [(ngModel)]=\"password1\"\n        [class.invalid]=\"invalidPassword\"\n      />\n      <img src=\"/assets/images/error.png\" *ngIf=\"invalidPassword\" />\n      <input\n        type=\"password\"\n        class=\"input2\"\n        [@input2]=\"editPassword\"\n        [disabled]=\"editPassword === 'off'\"\n        [(ngModel)]=\"password2\"\n        [class.invalid]=\"invalidPassword\"\n      />\n      <img\n        src=\"/assets/images/save.png\"\n        (click)=\"saveInput('password')\"\n        *ngSwitchCase=\"true\"\n      />\n      <img\n        src=\"/assets/images/close.png\"\n        (click)=\"closeInput('password'); editPassword = 'off'\"\n        *ngSwitchCase=\"true\"\n      />\n    </div>\n  </div>\n  <div\n    class=\"table\"\n    *ngIf=\"\n      shiftService.shifts.length !== 0 && shiftService.shifts !== undefined;\n      else shiftFree\n    \"\n  >\n    <table>\n      <thead>\n        <tr>\n          <th></th>\n          <th>Дата</th>\n          <th>Длительность</th>\n          <th>Мойка (рубли)</th>\n          <th>Заправка (литры)</th>\n          <th>Обслуженные машины</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let shift of shiftService.shifts; let idx = index\">\n          <td class=\"num\">{{ idx + 1 }}</td>\n          <td>{{ shift.shiftStart | date: \"dd.MM.yyyy\" }}</td>\n          <td>{{ shift.shiftTime | convertTime }}</td>\n          <td>{{ shift.wash }}</td>\n          <td>{{ shift.valueOil }}</td>\n          <td\n            [class.car-active-td]=\"carListIdx !== idx\"\n            class=\"cars-td\"\n            (click)=\"changeVisibleCarList(idx)\"\n            [ngSwitch]=\"carListIdx === idx\"\n          >\n            <div *ngSwitchCase=\"false\" style=\"cursor: pointer;\">\n              <a>{{ shift.carsList.length }}</a>\n            </div>\n            <div class=\"cars-block\" *ngSwitchCase=\"true\">\n              <div class=\"img\">\n                <img src=\"/assets/images/back.png\" width=\"25px\" height=\"25px\" />\n              </div>\n              <a\n                *ngFor=\"let car of shift.carsList\"\n                [routerLink]=\"['/cars', car]\"\n                >{{ car }}\n              </a>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n      <tfoot>\n        <tr>\n          <td colspan=\"2\" class=\"itog\">\n            Итого:\n          </td>\n          <td>{{ sumData(\"shiftTime\") | convertTime }}</td>\n          <td>{{ sumData(\"wash\") }}</td>\n          <td>{{ sumData(\"valueOil\") }}</td>\n          <td style=\"background-color: darkblue;\"></td>\n        </tr>\n      </tfoot>\n    </table>\n  </div>\n  <ng-template #shiftFree>\n    <h3>Неоплаченых смен пока нет</h3>\n  </ng-template>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n})\nexport class UsersComponent implements OnInit {\n  searchName: string;\n\n  constructor(public userService: UserService) {}\n\n  ngOnInit(): void {\n    this.userService.getUsers().subscribe(\n      (users) => {\n        this.userService.users = users;\n      },\n      (error) => {\n        console.log(error.error.message);\n      },\n      () => {\n        this.userService.loading = false;\n      }\n    );\n  }\n\n  updateSearch(text: string) {\n    this.searchName = text;\n  }\n}\n","<div class=\"gridPage\">\n  <div class=\"left\">\n    <app-top-block\n      (onChange)=\"updateSearch($event)\"\n      link=\"/users\"\n    ></app-top-block>\n    <div class=\"scroll\">\n      <div class=\"sub-scroll\">\n        <div\n          *ngFor=\"let user of userService.users | filterUsers: searchName\"\n          class=\"line fio\"\n          [routerLink]=\"['/users', user._id]\"\n          routerLinkActive=\"active-line fio-active\"\n        >\n          <p>{{ user.name }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"right\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { UsersComponent } from './users.component';\nimport { UserComponent } from './user/user.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard } from '../services/auth.guard';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserFreeComponent } from './user-free/user-free.component';\nimport { UserAddComponent } from './user-add/user-add.component';\n\n@NgModule({\n  declarations: [\n    UsersComponent,\n    UserComponent,\n    UserFreeComponent,\n    UserAddComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: UsersComponent,\n        canActivate: [AuthGuard],\n        canActivateChild: [AuthGuard],\n        children: [\n          { path: 'add', component: UserAddComponent },\n          {\n            path: ':id',\n            component: UserComponent,\n          },\n          { path: '', component: UserFreeComponent },\n        ],\n      },\n    ]),\n    ReactiveFormsModule,\n  ],\n})\nexport class UsersModule {}\n","export const URL_SERVER = 'https://pacific-cliffs-72324.herokuapp.com';\r\nexport const URLS_LOGO = {\r\n  R: '/assets/images/renault.png',\r\n  W: '/assets/images/volkswagen.png',\r\n  K: '/assets/images/kia.png',\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}